name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, microservice]

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      working-directory: ./${{ matrix.service }}
      run: npm install

    - name: Run tests
      working-directory: ./${{ matrix.service }}
      run: npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/student-registration-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/student-registration-backend:${{ github.sha }}

    - name: Build and push microservice
      uses: docker/build-push-action@v2
      with:
        context: ./microservice
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/student-validation-microservice:latest
          ${{ secrets.DOCKER_USERNAME }}/student-validation-microservice:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1

    - name: Deploy to Kubernetes
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml
        kubectl apply -f k8s/
      env:
        KUBECONFIG: kubeconfig.yaml